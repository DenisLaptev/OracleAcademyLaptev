<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
		  http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">

    <!-- Верхний абзац обязательно должен быть, иначе не запустится TomCat -->



    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

    <!-- Выше мы прописали стартовую страницу приложения -->

    <servlet>
        <servlet-name>login</servlet-name>
        <servlet-class>src\main\java\webproject\com\lap\servlets\LoginServlet.java</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>login</servlet-name>
        <url-pattern>/login</url-pattern>
    </servlet-mapping>

    <!-- Выше мы объявляем сервлеты.

    <servlet-name>login</servlet-name>
    Назначаем короткое имя, по которому можно
    обращаться, чтоб не писать весь путь до класса.
    Потом по этому имени можно будет обращаться к сервлету,
    не только для мапинга.

    <servlet-class>
    Пишем полный путь к сервету. Сервлету с таким адресом сопоставили
    короткое имя, по которому будем обращаться.

    <servlet-mapping>
        <servlet-name>login</servlet-name>
        <url-pattern>/login</url-pattern>
    </servlet-mapping>
    Это означает, что сервлету по адресу в проекте <servlet-class></servlet-class>
    соответствует адрес в адресной строке браузера <url-pattern></url-pattern>



     -->

    <servlet>
        <servlet-name>register</servlet-name>
        <servlet-class>src\main\java\webproject\com\lap\servlets\RegistrationServlet.java</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>register</servlet-name>
        <url-pattern>/register</url-pattern>
    </servlet-mapping>

    <!-- Аналогично для другого сервлета RegistrationServlet -->

</web-app>
